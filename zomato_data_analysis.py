# -*- coding: utf-8 -*-
"""Zomato_data_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13DDY98XnHoW7BteuN7DunRcQQoQS5na4
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df= pd.read_csv("/content/zomato.csv")

df.head()

df.head(4)

df.shape

df.columns

df.isnull().sum()

df.info()

feature_na=[feature for feature in df.columns if df[feature].isnull().sum()>0]
feature_na

#% of missing values
for feature in feature_na:
    print('{} has {} % missing values'.format(feature,np.round(df[feature].isnull().sum()/len(df)*100,4)))

df['rate'].unique()

df.dropna(axis='index',subset=['rate'],inplace=True)

def split(x):
    return x.split('/')[0]

df['rate']=df['rate'].apply(split)

"""AVERAGE RATING OF EACH RESTRAUNT"""

# Assuming df is your DataFrame
# Convert 'rate' column to numeric, coercing errors to NaN
df['rate'] = pd.to_numeric(df['rate'], errors='coerce')

# Group by 'name' and calculate the mean rating
df_rate = df.groupby('name')['rate'].mean().to_frame().reset_index()
df_rate.columns = ['restaurant', 'rating']

# Display the top 20 restaurants based on the mean rating
top_20 = df_rate.nlargest(20, 'rating')
print(top_20)

# Plot the bar chart for the top 20 restaurants
top_20.plot.bar(x='restaurant', y='rating', legend=False)
plt.xlabel('Restaurant')
plt.ylabel('Mean Rating')
plt.title('Top 20 Restaurants by Mean Rating')
plt.show()

# Display the shape of the df_rate DataFrame
print(df_rate.shape)

sns.set_style(style='whitegrid')
sns.distplot(df_rate['rating'])

plt.figure(figsize=(10,7))
chains=df['name'].value_counts()[0:20]
sns.barplot(x=chains,y=chains.index,palette='deep')
plt.title("Most famous restaurants chains in Bangaluru")
plt.xlabel("Number of outlets")

"""NOT ACCEPTING ONLINE ORDER

"""

x=df['online_order'].value_counts()
labels=['accepted','not accepted']
plt.pie(x,explode=[0.0,0.1],autopct='%1.1f%%')

"""What is the ratio b/w restaurants that provide and do not provide table booking ?"""

x=df['book_table'].value_counts()
labels=['not book','book']
plt.pie(x,explode=[0.0,0.1],autopct='%1.1f%%')

"""How many types of restaurants we have?"""

df['rest_type'].isna().sum()
df['rest_type'].dropna(inplace=True)
df['rest_type'].isna().sum()
len(df['rest_type'].unique())
plt.figure(figsize=(20,12))
df['rest_type'].value_counts().nlargest(20).plot.bar(color='red')
plt.gcf().autofmt_xdate()

"""Highest Voted Restaurant"""

df.groupby('name')['votes'].max().nlargest(10).plot.bar()

"""Total Restaurants At Different Locations Of Bengalore"""

df.groupby('location')['name'].unique()

restaurant=[]
location=[]
for key,location_df in df.groupby('location'):
    location.append(key)
    restaurant.append(len(location_df['name'].unique()))
df_total=pd.DataFrame(zip(location,restaurant))
df_total.columns=['location','restaurant']
df_total.set_index('location',inplace=True)
df_total.sort_values(by='restaurant').tail(10)
df_total.sort_values(by='restaurant').tail(10).plot.bar()
df_total.sort_values(by='restaurant').tail(10).index
!pip install plotly
import plotly.graph_objects as go
trace1 = go.Bar(
        x = df_total['restaurant'].nlargest(10).index,
        y = df_total['restaurant'].nlargest(10),
        name= 'Priority')
iplot([trace1])
df.isnull().sum()

"""Different Type Of Restaurants"""

#data is represented in form of percentage
(df['rest_type'].value_counts()/len(df))*100

"""Total number of variety of restaurants ie north indian,south Indian"""

cuisines = df['cuisines'].value_counts()[:10]
sns.barplot(x=cuisines.index, y=cuisines)
plt.xlabel('Cuisine')
plt.ylabel('Count')
plt.title("Most popular cuisines of Bangalore")
plt.xticks(rotation=90)
plt.show()